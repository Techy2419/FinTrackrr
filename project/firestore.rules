rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user owns the profile
    function ownsProfile(profileId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/profiles/$(profileId)) &&
             get(/databases/$(database)/documents/profiles/$(profileId)).data.userId == request.auth.uid;
    }
    
    // Match users collection
    match /users/{userId} {
      // Allow read and write only if the authenticated user is accessing their own document
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Profiles collection
    match /profiles/{profileId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Expenses collection
    match /expenses/{expenseId} {
      allow read: if isAuthenticated() && ownsProfile(resource.data.profileId);
      allow create: if isAuthenticated() && ownsProfile(request.resource.data.profileId);
      allow update, delete: if isAuthenticated() && ownsProfile(resource.data.profileId);
    }
  }
}
